/*
    合并2个有序链表，是个非常基础的题，不解释了.. 详见代码。
    不过我写这个函数还有很多可以优化的地方...
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode l3 = null, pre = null, head = null;
        while(l1!=null && l2!=null) {
            if(l1.val <= l2.val) { // put node of l1 (smaller one) into l3
                l3 = new ListNode(l1.val);
                l3.next = null;
                if(head == null) head = l3;
                if(pre != null)
                    pre.next = l3;
                pre = l3;
                l1 = l1.next;
            }
            else { //put node of l2 (bigger one) into l3
                l3 = new ListNode(l2.val);
                l3.next = null;
                if(head == null) head = l3;
                if(pre != null)
                    pre.next = l3;
                pre = l3;
                l2 = l2.next;
            }
        }
        while(l1!=null) {
            l3 = new ListNode(l1.val);
            l3.next = null;
            if(head == null) head = l3;
            if(pre != null)
                pre.next = l3;
            pre = l3;
            l1 = l1.next;
        }
        while(l2!=null) {
            l3 = new ListNode(l2.val);
            l3.next = null;
            if(head == null) head = l3;
            if(pre != null)
                pre.next = l3;
            pre = l3;
            l2 = l2.next;
        }
        return head;
    }
}
